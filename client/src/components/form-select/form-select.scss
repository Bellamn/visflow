@import '../../common/style/index';

.vf-select {
  /deep/ {
    .dropdown-toggle {
      max-height: 300px;
      overflow-y: auto;
      border-radius: $border-radius;
      padding: $padding-size;

      &::after {
        content: none;
      }

      .selected-tag {
        width: 100%;
        border-radius: 0;
        margin: 0;
        background: white;

        @extend %ellipsis-text;

        .close {
          float: right;
          font-size: 1rem;
          line-height: 1.5rem;
          padding: 1rem;
          margin: -1rem -1rem;

          &:hover {
            opacity: .75;
          }
        }
      }
    }

    .open-indicator {
      transform: scale(.6);

      &:hover::before {
        border-color: rgba(60, 60, 60, .75);
      }
    }

    &.single {
      .dropdown-toggle {
        overflow-y: hidden;
        height: 2.75rem;

        .selected-tag {
          width: calc(100% - 2rem); // use 2rem to aviod overlapping with the close and dropdown toggle
          height: 100%;
          pointer-events: none; // avoid interference with search input
        }
      }

      input.form-control {
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
      }

      button.clear {
        font-size: 1.25rem;
        right: 2rem;
        top: .5rem;

        &:hover {
          color: #555;
        }
      }

      .open-indicator {
        top: .75rem;
      }
    }

    &:not(.single) { // hover background for multiple select
      .selected-tag:hover {
        background-color: #eee;
      }
    }

    .dropdown-menu {
      overflow-y: auto;

      li {
        pointer-events: none;
      }

      li > a {
        // Disable pointer events for original <a> wrapper from v-select.
        // Remove its visual effects.
        pointer-events: none;
        background: none;
        padding: 0;

        // Use a div wrapper to replace the original <a> wrapper.
        > div {
          width: 100%;
          height: 100%;
          padding: 3px 20px;
          pointer-events: all;

          &.disabled {
            color: #ccc;
            cursor: not-allowed;
            background: #eee;
          }

          > a.label {
            pointer-events: none;
          }
        }
      }

      li.active > a > div {
        background-color: $theme-green-light;
      }

      li.highlight > a > div:not(.disabled) {
        background-color: $theme-green;
      }
    }
  }

  &.not-clearable /deep/ {
    .dropdown-toggle .clear {
      display: none;
    }
  }
}
